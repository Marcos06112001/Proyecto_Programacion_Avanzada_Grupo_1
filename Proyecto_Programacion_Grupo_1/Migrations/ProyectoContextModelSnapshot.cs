// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Programacion_Grupo_1.Models;

#nullable disable

namespace Proyecto_Programacion_Grupo_1.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    partial class ProyectoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Academia", b =>
                {
                    b.Property<int>("AcademiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademiaID"));

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcademiaID");

                    b.ToTable("Academias");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.CarritoItem", b =>
                {
                    b.Property<int>("CarritoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoItemId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("MembresiaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoID")
                        .HasColumnType("int");

                    b.HasKey("CarritoItemId");

                    b.HasIndex("MembresiaID");

                    b.HasIndex("ProductoID");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Clase", b =>
                {
                    b.Property<int>("ClaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseID"));

                    b.Property<int>("AcademiaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaseID");

                    b.HasIndex("AcademiaID");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Compra", b =>
                {
                    b.Property<int>("CompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MembresiaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("CompraID");

                    b.HasIndex("MembresiaID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Membresia", b =>
                {
                    b.Property<int>("MembresiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembresiaID"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("MembresiaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Pago", b =>
                {
                    b.Property<int>("PagoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoID"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PagoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductoID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.ReservaClase", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"));

                    b.Property<int>("ClaseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("ClaseID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ReservasClase");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.CarritoItem", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Membresia", "Membresia")
                        .WithMany()
                        .HasForeignKey("MembresiaID");

                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID");

                    b.Navigation("Membresia");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Clase", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Academia", "Academia")
                        .WithMany("Clases")
                        .HasForeignKey("AcademiaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Compra", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Membresia", "Membresia")
                        .WithMany()
                        .HasForeignKey("MembresiaID");

                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID");

                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Usuario", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membresia");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Membresia", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Pago", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.ReservaClase", b =>
                {
                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Programacion_Grupo_1.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Academia", b =>
                {
                    b.Navigation("Clases");
                });

            modelBuilder.Entity("Proyecto_Programacion_Grupo_1.Models.Usuario", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Pagos");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
